{"version":3,"sources":["Styles/App.style.js","GlobalStyles/GlobalVariables.js","Styles/AddTask.style.js","Styles/Button.style.js","Components/AddTask.js","Styles/Pagination.style.js","Components/Pagination.js","Styles/SortComponent.style.js","Components/SortComponent.js","Styles/Task.syle.js","Components/Task.js","Styles/TaskList.style.js","Styles/Search.style.js","Components/Search.js","Components/TaskList.js","Components/App.js","reportWebVitals.js","GlobalStyles/GlobalStyle.style.js","index.js"],"names":["AppStyled","styled","div","styleVariables","fontColor","mainColor","secondaryColor","btnColor","AddTaskStyled","form","transparentize","Button","button","props","height","width","darken","AddTask","state","text","important","date","Date","toISOString","slice","handleChange","e","target","name","value","setState","handleCheck","checked","handleSubmit","preventDefault","newTask","active","finishDate","addTask","this","className","type","placeholder","maxLength","onChange","id","htmlFor","onClick","Component","PaginationStyled","PageItem","p","currentPage","lighten","Pagination","pageIndex","pageSize","pageSizes","itemCount","switchPage","switchIndex","pages","i","push","itemsBeforeAfter","endIndex","startIndex","result","length","style","cursor","displayPageItems","map","size","SortComponentStyled","SortComponent","sort","listName","property","desc","activeSort","position","icon","faSortDown","faSort","faSortUp","TaskCol","colStart","colEnd","css","Task","task","worldBreak","wordBreak","buttons","change","faCheck","delete","faTimes","dateFinish","toLocaleString","TaskListStyled","ListWrapper","moveUp","TaskListActive","TaskListDone","SearchStyled","Search","searchString","handleSearch","search","onSubmit","faSearch","TaskList","activeTasks","doneTasks","reSort","activeTasksSort","propertyName","doneTasksSort","activePageIndex","activePageSize","donePageIndex","donePageSize","activeList","show","showAgain","doneList","hide","moveDown","showMoveUp","flag","loadActiveTasks","tasks","filter","changeStatus","loadDoneTasks","sortTasks","changeDirection","list","compare","a","b","reverse","switchActivePageIndex","switchActivePageSize","switchDonePageIndex","switchDonePageSize","activeFiltered","includes","doneFiltered","handleAnimations","document","querySelector","offsetHeight","refresh","stopRefresh","App","deleteTask","item","changeTaskStatus","index","findIndex","el","changeTasks","getTime","handleAddTask","Math","max","newlist","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2fb83723.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const AppStyled = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n\r\n  .title {\r\n    font-size: 5rem;\r\n    height:auto ;\r\n    @media(max-width:700px){\r\n      font-size: 3rem;\r\n    }\r\n  }\r\n`;\r\n","const styleVariables = {\r\nfontColor: \"#000\",\r\nmainColor: \"lightblue\",\r\nsecondaryColor: \"white\",\r\nbtnColor: \"#000\",\r\n}\r\n\r\nexport default styleVariables;","import styled from \"styled-components\";\r\nimport styleVariables from \"../GlobalStyles/GlobalVariables\";\r\nimport { transparentize } from \"polished\";\r\n\r\nexport const AddTaskStyled = styled.form`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  background-color: ${transparentize(0.3, styleVariables.mainColor)};\r\n  box-shadow: 0 0 10px ${styleVariables.mainColor};\r\n\r\n  .addTaskText {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    input {\r\n      text-align: center;\r\n      background-color: ${styleVariables.secondaryColor};\r\n      width: 50%;\r\n      height: 1.3em;\r\n      font-size: 1.5rem;\r\n      padding: 0 10px;\r\n      margin-top: 1vh;\r\n      @media (max-width: 760px) {\r\n        width: 90%;\r\n      }\r\n    }\r\n  }\r\n  .add-btn {\r\n    display: flex;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-bottom: 5px;\r\n  }\r\n  .addTaskOptions {\r\n    width: 60%;\r\n    display: flex;\r\n    font-size: 1.2rem;\r\n    @media (max-width: 760px) {\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n    div {\r\n      padding: 5px 0;\r\n    }\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    input {\r\n      font-family: sans-serif;\r\n      font-size: 1.2rem;\r\n      background-color: ${styleVariables.secondaryColor};\r\n      border: 1px solid;\r\n      margin-right: 5px;\r\n      border-radius: 0.3rem;\r\n    }\r\n  }\r\n`;\r\n","import { darken } from \"polished\";\r\nimport styled from \"styled-components\";\r\nimport styleVariables from \"../GlobalStyles/GlobalVariables\";\r\n\r\nexport const Button = styled.button`\r\n    height: ${props=> props.height? props.height: \"2rem\"};\r\n    width: ${props=> props.width? props.width : \"2rem\"};\r\n    margin-right: 4px;\r\n    font-size: 1.3rem;\r\n    font-family: \"Roboto\", sans-serif;\r\n    color: ${styleVariables.btnColor};\r\n    border: 1px solid ${styleVariables.btnColor};\r\n    box-shadow: 0 1px 2px ${styleVariables.btnColor};\r\n    background-color: ${styleVariables.secondaryColor};\r\n    border-radius: 0.3rem;\r\n    transition: 0.25s;\r\n    :hover {\r\n      background-color: ${darken(0.15, styleVariables.secondaryColor)};\r\n    }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { AddTaskStyled } from \"../Styles/AddTask.style\";\r\nimport { Button } from \"../Styles/Button.style\";\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    text: \"\",\r\n    important: false,\r\n    date: new Date().toISOString().slice(0, 10),\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleCheck = (e) => {\r\n    const { name, checked } = e.target;\r\n    this.setState({\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e, text, date, important) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      text: \"\",\r\n      important: false,\r\n      date: new Date().toISOString().slice(0, 10),\r\n    });\r\n    const newTask = {\r\n      text,\r\n      date,\r\n      important,\r\n      active: true,\r\n      finishDate: null,\r\n    };\r\n    this.props.addTask(newTask);\r\n  };\r\n\r\n  render() {\r\n    const { text, important, date } = this.state;\r\n    return (\r\n      <AddTaskStyled>\r\n        <div className=\"addTaskText\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"New task\"\r\n            maxLength=\"100\"\r\n            value={text}\r\n            name=\"text\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"addTaskOptions\">\r\n          <div>\r\n            <input\r\n              className=\"checkbox\"\r\n              type=\"checkbox\"\r\n              name=\"important\"\r\n              checked={important}\r\n              id=\"important\"\r\n              onChange={this.handleCheck}\r\n            />\r\n            <label htmlFor=\"important\">\r\n              <strong>Important</strong>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"date\"\r\n              name=\"date\"\r\n              id=\"date\"\r\n              value={date}\r\n              onChange={this.handleChange}\r\n            />\r\n            <label htmlFor=\"date\">\r\n              <strong>Task deadline</strong>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"add-btn\">\r\n          <Button width=\"auto\" onClick={(e) => this.handleSubmit(e, text, date, important)}>\r\n            Add task\r\n          </Button>\r\n        </div>\r\n      </AddTaskStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import { lighten } from \"polished\";\r\nimport styled from \"styled-components\";\r\nimport styleVariables from \"../GlobalStyles/GlobalVariables\";\r\n\r\nexport const PaginationStyled = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 5px;\r\n  user-select: none;\r\n  }\r\n  select {\r\n    background-color: ${styleVariables.secondaryColor};\r\n    box-shadow: 0 0 1px 1px ${styleVariables.mainColor};\r\n    border:none;\r\n    padding: 3px;\r\n    margin: 0 2px;\r\n  }\r\n`;\r\n\r\nexport const PageItem = styled.p`\r\n  margin: 5px 2px;\r\n  box-shadow: 0 0 1px 1px ${styleVariables.mainColor};\r\n  padding: 1px 4px;\r\n  background-color: ${(props) =>\r\n    props.currentPage ? lighten(0.05, styleVariables.mainColor) : null};\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { PageItem, PaginationStyled } from \"../Styles/Pagination.style\";\r\n\r\nconst Pagination = ({\r\n  pageIndex,\r\n  pageSize,\r\n  pageSizes,\r\n  itemCount,\r\n  switchPage,\r\n  switchIndex,\r\n}) => {\r\n  let pages = [];\r\n  for (let i = 0; i < itemCount / pageSize; i++) {\r\n    pages.push(\r\n      <PageItem\r\n        currentPage={pageIndex === i}\r\n        key={i}\r\n        onClick={() => switchPage(i)}\r\n      >\r\n        {i + 1}\r\n      </PageItem>\r\n    );\r\n  }\r\n\r\n  const displayPageItems = (itemsBeforeAfter) => {\r\n    let endIndex, startIndex;\r\n    let result = [];\r\n    startIndex = pageIndex - itemsBeforeAfter;\r\n    endIndex = pageIndex + itemsBeforeAfter + 1;\r\n    if (startIndex < 0) {\r\n      startIndex = 0;\r\n      endIndex = 1 + 2 * itemsBeforeAfter;\r\n      if (endIndex > pages.length) endIndex = pages.length;\r\n    }\r\n    if (endIndex > pages.length) {\r\n      startIndex = pages.length - 2 * itemsBeforeAfter;\r\n      endIndex = pages.length;\r\n      if (startIndex < 0) startIndex = 0;\r\n    }\r\n    if (startIndex > 0)\r\n      result.push(\r\n        <PageItem key={0} onClick={() => switchPage(0)}>\r\n          1\r\n        </PageItem>,\r\n        <PageItem key={-1} style={{ cursor: \"default\" }}>\r\n          ...\r\n        </PageItem>\r\n      );\r\n    result.push(...pages.slice(startIndex, endIndex));\r\n    if (endIndex < pages.length)\r\n      result.push(\r\n        <PageItem key={-2} style={{ cursor: \"default\" }}>\r\n          ...\r\n        </PageItem>,\r\n        <PageItem key={pages.length - 1} onClick={() => switchPage(pages.length - 1)}>\r\n          {pages.length}\r\n        </PageItem>\r\n      );\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <PaginationStyled>\r\n      {displayPageItems(2)}\r\n      <select value={pageSize} onChange={switchIndex}>\r\n        {pageSizes.map((size) => (\r\n          <option key={size} value={size}>{size}</option>\r\n        ))}\r\n      </select>\r\n    </PaginationStyled>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SortComponentStyled = styled.div`\r\n  position: relative;\r\n  text-align: center;\r\n  padding: 10px 0 10px;\r\n  user-select: none;\r\n  strong{\r\n    padding: 0 5px 0 0;\r\n  }\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSortDown, faSortUp, faSort } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { SortComponentStyled } from \"../Styles/SortComponent.style\";\r\n\r\nconst SortComponent = (props) => {\r\n  const { sort, listName, text, property, desc, activeSort } = props;\r\n  return (\r\n    <SortComponentStyled onClick={() => sort(listName, property)}>\r\n      <strong>{text}</strong>\r\n      {activeSort === property && desc ? (\r\n        <FontAwesomeIcon style={{position:\"absolute\"}} icon={faSortDown}></FontAwesomeIcon>\r\n      ) : activeSort === property && !desc ? (\r\n        <FontAwesomeIcon style={{position:\"absolute\"}} icon={faSortUp}></FontAwesomeIcon>\r\n      ) : activeSort !==\"\"? null : <FontAwesomeIcon style={{position:\"absolute\"}} icon={faSort}></FontAwesomeIcon>}\r\n    </SortComponentStyled>\r\n  );\r\n};\r\n\r\nexport default SortComponent;\r\n","import styled, { css } from \"styled-components\";\r\nimport styleVariables from \"../GlobalStyles/GlobalVariables\";\r\nimport { darken, transparentize} from \"polished\";\r\n\r\nexport const TaskCol = styled.div`\r\n  grid-column: ${(props) => props.colStart} / ${(props) => props.colEnd};\r\n  word-wrap: break-word;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 15px;\r\n  ${(props) => (props.important ? important : null)}\r\n`;\r\n\r\nconst important = () => css`\r\n  font-weight: bold;\r\n  background-color: ${darken(0.1, styleVariables.mainColor)};\r\n  text-decoration: underline;\r\n  border-bottom: 3px solid ${transparentize(0.4, styleVariables.mainColor)};\r\n  border-top: 3px solid ${transparentize(0.4, styleVariables.mainColor)};\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { TaskCol } from \"../Styles/Task.syle\";\r\nimport { Button } from \"../Styles/Button.style\";\r\n\r\nconst Task = (props) => {\r\n  const { id, text, date, active, important, finishDate } = props.task;\r\n  const worldBreak = {\r\n    wordBreak: \"break-all\",\r\n  };\r\n  if (active) {\r\n    return (\r\n      <>\r\n        <TaskCol\r\n          style={worldBreak}\r\n          important={important}\r\n          colStart={1}\r\n          colEnd={2}\r\n        >\r\n          {text}\r\n        </TaskCol>\r\n        <TaskCol important={important} colStart={2} colEnd={3}>\r\n          {date}\r\n        </TaskCol>\r\n        <TaskCol buttons={true} important={important} colStart={3} colEnd={4}>\r\n          <Button onClick={() => props.change(id)}>\r\n            <FontAwesomeIcon icon={faCheck} />\r\n          </Button>\r\n          <Button onClick={() => props.delete(id)}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </Button>\r\n        </TaskCol>\r\n      </>\r\n    );\r\n  } else {\r\n    const dateFinish = new Date(finishDate).toLocaleString();\r\n    return (\r\n      <>\r\n        <TaskCol style={worldBreak} colStart={1} colEnd={2}>\r\n          {text}\r\n        </TaskCol>\r\n        <TaskCol colStart={2} colEnd={3}>\r\n          {date}\r\n        </TaskCol>\r\n        <TaskCol colStart={3} colEnd={4}>\r\n          {dateFinish}\r\n        </TaskCol>\r\n        <TaskCol buttons={true} colStart={4} colEnd={6}>\r\n          <Button onClick={() => props.delete(id)}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </Button>\r\n        </TaskCol>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Task;\r\n","import styled from \"styled-components\";\r\nimport styleVariables from \"../GlobalStyles/GlobalVariables\";\r\n\r\nexport const TaskListStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100vw;\r\n  align-items: center;\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const ListWrapper = styled.div`\r\n  transform: rotate3d(1, 0, 0, 90deg);\r\n  opacity:0;\r\n  transition: 1s;\r\n  backface-visibility: hidden;\r\n  &.show {\r\n    transform: rotate3d(0, 0, 0, 90deg);\r\n    opacity:1;\r\n    transition: transform 1s;\r\n  }\r\n  &.move-up {\r\n    transform: rotate3d(0, 0, 0, 90deg) translateY(${props => -props.moveUp+\"px\"});\r\n    opacity:1;\r\n    transition: 1s;\r\n    transition-delay: .3s;\r\n    &.hide {\r\n      transform: translateY(${props => -props.moveUp+\"px\"}) rotate3d(1, 0, 0, 90deg);\r\n      opacity:0;\r\n      transition: 1s;\r\n    }\r\n  }\r\n  &.move-down {\r\n    transform: rotate3d(0, 0, 0, 90deg) translateY(0);\r\n    transition: 1s;\r\n  }\r\n`;\r\n\r\nexport const TaskListActive = styled.div`\r\n  width: 80vw;\r\n  box-shadow: 0 0 100px 0px ${styleVariables.mainColor} inset;\r\n  grid-template-columns: 2fr 1fr auto;\r\n  border-radius: 1rem;\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  min-height: 5vh;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const TaskListDone = styled.div`\r\n  width: 80vw;\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr 1fr auto;\r\n  box-shadow: 0 0 100px 0px ${styleVariables.mainColor} inset;\r\n  border-radius: 1rem;\r\n  grid-auto-rows: auto;\r\n  min-height: 5vh;\r\n  overflow: hidden;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchStyled = styled.form`\r\n  padding: .8em 0;\r\n  position: relative;\r\n  input {\r\n    font-size: 1.2rem;\r\n    padding:0 5px;\r\n    height: 1.2em;\r\n  }\r\n  .search-icon{\r\n    position: absolute;\r\n    right: .2em;\r\n    top: 1.1em;\r\n    opacity: 0.7;\r\n  }\r\n\r\n`;","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { SearchStyled } from \"../Styles/Search.style\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    searchString: \"\",\r\n  };\r\n\r\n  handleSearch = (e, searchString) => {\r\n    e.preventDefault();\r\n    this.props.search(searchString);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      searchString: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { searchString } = this.state;\r\n    return (\r\n      <SearchStyled onSubmit={(e) => this.handleSearch(e, searchString)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"search\"\r\n          value={searchString}\r\n          onChange={this.handleChange}\r\n        />\r\n        <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />\r\n      </SearchStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport SortComponent from \"./SortComponent\";\r\nimport Task from \"./Task\";\r\nimport {\r\n  TaskListStyled,\r\n  TaskListActive,\r\n  TaskListDone,\r\n  ListWrapper,\r\n} from \"../Styles/TaskList.style\";\r\nimport Search from \"./Search\";\r\nimport { TaskCol } from \"../Styles/Task.syle\";\r\n\r\nclass TaskList extends Component {\r\n  state = {\r\n    activeTasks: [],\r\n    doneTasks: [],\r\n    reSort: false,\r\n    activeTasksSort: { propertyName: \"\", desc: false },\r\n    doneTasksSort: { propertyName: \"\", desc: false },\r\n    activePageIndex: 0,\r\n    activePageSize: 5,\r\n    donePageIndex: 0,\r\n    donePageSize: 5,\r\n    activeList: {\r\n      show: false,\r\n      showAgain: false,\r\n    },\r\n    doneList: {\r\n      show: false,\r\n      hide: false,\r\n      moveUp: false,\r\n      moveDown: false,\r\n      showMoveUp: false,\r\n      flag: false,\r\n    },\r\n    moveUp: 0,\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    const { activeTasksSort, doneTasksSort } = this.state;\r\n    if (this.props.refresh) {\r\n      let reSort = false;\r\n      activeTasksSort.propertyName !== \"\" || doneTasksSort.propertyName !== \"\"\r\n        ? (reSort = true)\r\n        : (reSort = false);\r\n      this.setState({\r\n        activeTasks: this.loadActiveTasks(),\r\n        doneTasks: this.loadDoneTasks(),\r\n        reSort,\r\n      });\r\n      this.props.stopRefresh();\r\n    }\r\n    if (this.state.reSort) {\r\n      if (activeTasksSort.propertyName !== \"\")\r\n        this.sortTasks(\"activeTasks\", activeTasksSort.propertyName, false);\r\n      if (doneTasksSort.propertyName !== \"\")\r\n        this.sortTasks(\"doneTasks\", doneTasksSort.propertyName, false);\r\n      this.setState({ reSort: false });\r\n    }\r\n    this.handleAnimations();\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      activeTasks: this.loadActiveTasks(),\r\n      doneTasks: this.loadDoneTasks(),\r\n    });\r\n  }\r\n  loadActiveTasks = () => {\r\n    return this.props.tasks\r\n      .filter((task) => task.active)\r\n      .map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          delete={this.props.delete}\r\n          change={this.props.changeStatus}\r\n        />\r\n      ));\r\n  };\r\n  loadDoneTasks = () => {\r\n    return this.props.tasks\r\n      .filter((task) => !task.active)\r\n      .map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          delete={this.props.delete}\r\n          change={this.props.changeStatus}\r\n        />\r\n      ));\r\n  };\r\n\r\n  sortTasks = (listName, property, changeDirection = true) => {\r\n    const list = [...this.state[listName]];\r\n    let { desc } = this.state[listName + \"Sort\"];\r\n    if (!changeDirection) {\r\n      desc = !desc;\r\n    }\r\n    const compare = (a, b) =>\r\n      a.props.task[property] < b.props.task[property]\r\n        ? -1\r\n        : a.props.task[property] > b.props.task[property]\r\n        ? 1\r\n        : 0;\r\n    desc ? list.sort(compare).reverse() : list.sort(compare);\r\n    this.setState({\r\n      [listName]: list,\r\n      [listName + \"Sort\"]: {\r\n        propertyName: property,\r\n        desc: !desc,\r\n      },\r\n    });\r\n  };\r\n  switchActivePageIndex = (pageIndex) => {\r\n    this.setState({\r\n      activePageIndex: pageIndex,\r\n    });\r\n  };\r\n  switchActivePageSize = (e) => {\r\n    this.setState({\r\n      activePageSize: e.target.value * 1,\r\n      activePageIndex: 0,\r\n    });\r\n  };\r\n  switchDonePageIndex = (pageIndex, pageSize) => {\r\n    this.setState({\r\n      donePageIndex: pageIndex,\r\n    });\r\n  };\r\n  switchDonePageSize = (e) => {\r\n    this.setState({\r\n      donePageSize: e.target.value * 1,\r\n      donePageIndex: 0,\r\n    });\r\n  };\r\n\r\n  handleSearch = (searchString) => {\r\n    let activeFiltered = this.loadActiveTasks().filter(\r\n      (task) =>\r\n        task.props.task.text.includes(searchString) ||\r\n        task.props.task.date.includes(searchString)\r\n    );\r\n    let doneFiltered = this.loadDoneTasks().filter(\r\n      (task) =>\r\n        task.props.task.text.includes(searchString) ||\r\n        task.props.task.date.includes(searchString) ||\r\n        new Date(task.props.task.finishDate)\r\n          .toLocaleString()\r\n          .includes(searchString)\r\n    );\r\n    if (activeFiltered.length === 0)\r\n      activeFiltered.push(\r\n        <TaskCol key=\"0\" colStart={1} colEnd={4}>\r\n          No results found.\r\n        </TaskCol>\r\n      );\r\n    if (doneFiltered.length === 0)\r\n      doneFiltered.push(\r\n        <TaskCol key=\"0\" colStart={1} colEnd={4}>\r\n          No results found.\r\n        </TaskCol>\r\n      );\r\n    this.setState({\r\n      activeTasks: activeFiltered,\r\n      activePageIndex: 0,\r\n      doneTasks: doneFiltered,\r\n      donePageIndex: 0,\r\n    });\r\n  };\r\n  handleAnimations = () => {\r\n    const { activeTasks, doneTasks, search, activeList, doneList } = this.state;\r\n    //active list\r\n    if ((activeTasks.length > 0 || search) && !activeList.show) {\r\n      this.setState({\r\n        activeList: { show: true },\r\n        doneList: { moveUp: false },\r\n      });\r\n    }\r\n    if ((activeTasks.length === 0 || search) && activeList.show) {\r\n      const height = document.querySelector(\"#active-task-list\"\r\n      ).offsetHeight;\r\n      this.setState({\r\n        activeList: { show: false },\r\n        moveUp: height\r\n      });\r\n    }\r\n\r\n    //done list\r\n    if (\r\n      (doneTasks.length > 0 || search) &&\r\n      !doneList.show &&\r\n      !doneList.moveUp &&\r\n      !doneList.showMoveUp\r\n    ) {\r\n      this.setState({\r\n        doneList: { show: true },\r\n      });\r\n    }\r\n    if ((doneTasks.length === 0 || search) && doneList.show) {\r\n      this.setState({\r\n        doneList: {},\r\n      });\r\n    }\r\n    if (\r\n      (doneTasks.length === 0 || search) &&\r\n      doneList.moveUp &&\r\n      !doneList.flag\r\n    ) {\r\n      this.setState({\r\n        doneList: {\r\n          moveUp: true,\r\n          hide: true,\r\n          flag: true,\r\n        },\r\n      });\r\n    }\r\n    if (\r\n      (doneTasks.length > 0 || search) &&\r\n      doneList.show &&\r\n      !activeList.show &&\r\n      !doneList.moveUp\r\n    ) {\r\n      if (\r\n        activeTasks.length === 0 &&\r\n        doneTasks.length === 1 &&\r\n        !doneList.flag\r\n      ) {\r\n        this.setState({\r\n          doneList: { show: true, hide: false, flag: true },\r\n        });\r\n      } else {\r\n        this.setState({\r\n          doneList: {\r\n            moveUp: true,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      activeTasks,\r\n      doneTasks,\r\n      activeTasksSort,\r\n      doneTasksSort,\r\n      activePageIndex,\r\n      activePageSize,\r\n      donePageIndex,\r\n      donePageSize,\r\n      search,\r\n      doneList,\r\n      activeList,\r\n    } = this.state;\r\n\r\n    return (\r\n      <TaskListStyled>\r\n        <Search search={this.handleSearch} />\r\n        {(activeTasks.length > 0 || search || 1) && (\r\n          <ListWrapper\r\n            id=\"active-task-list\"\r\n            className={[activeList.show ? \"show\" : null]}\r\n          >\r\n            <h3>Active Tasks</h3>\r\n            <TaskListActive>\r\n              <SortComponent\r\n                sort={this.sortTasks}\r\n                listName=\"activeTasks\"\r\n                property={\"text\"}\r\n                text={\"Task\"}\r\n                desc={activeTasksSort.desc}\r\n                activeSort={activeTasksSort.propertyName}\r\n              />\r\n              <SortComponent\r\n                sort={this.sortTasks}\r\n                listName=\"activeTasks\"\r\n                property={\"date\"}\r\n                text={\"Deadline\"}\r\n                desc={activeTasksSort.desc}\r\n                activeSort={activeTasksSort.propertyName}\r\n              />\r\n              {activeTasks.slice(\r\n                activePageIndex === 0 ? 0 : activePageIndex * activePageSize,\r\n                activePageIndex * activePageSize + activePageSize\r\n              )}\r\n            </TaskListActive>\r\n            <Pagination\r\n              pageIndex={activePageIndex}\r\n              pageSize={activePageSize}\r\n              pageSizes={[5, 10, 20]}\r\n              itemCount={activeTasks.length}\r\n              switchPage={this.switchActivePageIndex}\r\n              switchIndex={this.switchActivePageSize}\r\n            />\r\n          </ListWrapper>\r\n        )}\r\n        {(doneTasks.length > 0 || 1) && (\r\n          <ListWrapper\r\n            moveUp={this.state.moveUp}\r\n            className={[\r\n              doneList.show ? \"show\" : null,\r\n              doneList.moveUp ? \"move-up\" : null,\r\n              doneList.hide ? \"hide\" : null,\r\n            ]}\r\n          >\r\n            <h3>Done Tasks</h3>\r\n            <TaskListDone>\r\n              <SortComponent\r\n                sort={this.sortTasks}\r\n                listName=\"doneTasks\"\r\n                property={\"text\"}\r\n                text={\"Task\"}\r\n                desc={doneTasksSort.desc}\r\n                activeSort={doneTasksSort.propertyName}\r\n              />\r\n              <SortComponent\r\n                sort={this.sortTasks}\r\n                listName=\"doneTasks\"\r\n                property={\"date\"}\r\n                text={\"Deadline\"}\r\n                desc={doneTasksSort.desc}\r\n                activeSort={doneTasksSort.propertyName}\r\n              />\r\n              <SortComponent\r\n                sort={this.sortTasks}\r\n                listName=\"doneTasks\"\r\n                property={\"finishDate\"}\r\n                text={\"Finished\"}\r\n                desc={doneTasksSort.desc}\r\n                activeSort={doneTasksSort.propertyName}\r\n              />\r\n\r\n              {doneTasks.slice(\r\n                donePageIndex === 0 ? 0 : donePageIndex * donePageSize,\r\n                donePageIndex * donePageSize + donePageSize\r\n              )}\r\n            </TaskListDone>\r\n            <Pagination\r\n              pageIndex={donePageIndex}\r\n              pageSize={donePageSize}\r\n              pageSizes={[5, 10, 20]}\r\n              itemCount={doneTasks.length}\r\n              switchPage={this.switchDonePageIndex}\r\n              switchIndex={this.switchDonePageSize}\r\n            />\r\n          </ListWrapper>\r\n        )}\r\n      </TaskListStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { Component } from 'react';\r\nimport { AppStyled } from '../Styles/App.style';\r\nimport AddTask from './AddTask';\r\nimport TaskList from './TaskList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    refresh: false,\r\n    tasks: [\r\n      {\r\n        id: 0,\r\n        text: 'Zrobić zakupy',\r\n        date: '2020-02-11',\r\n        important: false,\r\n        active: true,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 1,\r\n        text: 'Pomalować pokój',\r\n        date: '2020-02-15',\r\n        important: true,\r\n        active: true,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 2,\r\n        text: 'Skosić trawnik',\r\n        date: '2020-02-13',\r\n        important: true,\r\n        active: true,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 3,\r\n        text: 'Posprzątać dom',\r\n        date: '2020-02-14',\r\n        important: true,\r\n        active: true,\r\n        finishDate: null,\r\n      },\r\n    ],\r\n  };\r\n\r\n  deleteTask = (id) => {\r\n    this.setState((state) => ({\r\n      tasks: state.tasks.filter((item) => item.id !== id),\r\n      refresh: true,\r\n    }));\r\n  };\r\n  changeTaskStatus = (id) => {\r\n    const index = this.state.tasks.findIndex((el) => el.id === id);\r\n    let changeTasks = [...this.state.tasks];\r\n    changeTasks[index].active = false;\r\n    changeTasks[index].finishDate = new Date().getTime();\r\n    this.setState({\r\n      tasks: changeTasks,\r\n      refresh: true,\r\n    });\r\n  };\r\n\r\n  handleAddTask = (newTask) => {\r\n    newTask.id = this.state.tasks.length > 0 ? Math.max(...this.state.tasks.map((task) => task.id)) + 1 : 0;\r\n    const newlist = [...this.state.tasks];\r\n    newlist.push(newTask);\r\n    this.setState((state) => ({\r\n      tasks: newlist,\r\n      refresh: true,\r\n    }));\r\n  };\r\n  stopRefresh = () => {\r\n    this.setState({ refresh: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <AppStyled>\r\n        <div className='title'>ToDoList</div>\r\n        <AddTask addTask={this.handleAddTask} />\r\n        <TaskList refresh={this.state.refresh} stopRefresh={this.stopRefresh} tasks={this.state.tasks} delete={this.deleteTask} changeStatus={this.changeTaskStatus} />\r\n      </AppStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport styleVariables from \"./GlobalVariables\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: 'Roboto', sans-serif;;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: ${styleVariables.fontColor};\r\n}\r\n\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { GlobalStyle } from \"./GlobalStyles/GlobalStyle.style\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}